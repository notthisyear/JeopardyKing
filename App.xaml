<Application x:Class="JeopardyKing.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:JeopardyKing.WpfComponents.Converters"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             StartupUri="Windows/StartupWindow.xaml">

    <Application.Resources>

        <FontFamily x:Key="Cascadia Code">pack://application:,,,/Resources/Fonts/#Cascadia Code</FontFamily>
        <FontFamily x:Key="Lato">pack://application:,,,/Resources/Fonts/#Lato</FontFamily>

        <BitmapImage x:Key="emptyImage" UriSource="/JeopardyKing;component/Resources/empty.png"/>
        <BitmapImage x:Key="jeopardyImage" UriSource="/JeopardyKing;component/Resources/jeopardy.png"/>
        <!-- Converters -->
        <converters:BooleanToVisibleOrCollapsedConverter x:Key="booleanToVisibleOrCollapsedConverter" />
        <converters:ValueDisplayConverter x:Key="valueDisplayConverter" />
        <converters:StringShortenerConverter x:Key="stringShortenerConverter" />
        <converters:SecondsToTimeStringConverter x:Key="secondsToTimeStringConverter" />
        <converters:QuestionToIconTypeConverter x:Key="questionToIconTypeConverter" />
        <converters:ToUpperOrLowerConverter x:Key="toUpperOrLowerConverter" />

        <!-- Background colors-->
        <Color x:Key="MainBackgroundRaw" A="255" R="59" G="59" B="59" />
        <Color x:Key="BackgroundDarkerShadeRaw" A="255" R="34" G="34" B="34" />

        <SolidColorBrush x:Key="MainBackgroundColor" Color="{StaticResource MainBackgroundRaw}" />
        <SolidColorBrush x:Key="BackgroundColorDarkerShade" Color="{StaticResource BackgroundDarkerShadeRaw}" />
        <SolidColorBrush x:Key="BackgroundColorDarkerShadeWithOpacity" Color="{StaticResource BackgroundDarkerShadeRaw}" Opacity="0.7"/>

        <LinearGradientBrush x:Key="PlayingFieldBackground" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#031A3E" Offset="0.0" />
            <GradientStop Color="#042962" Offset="0.5" />
            <GradientStop Color="#040E62" Offset="0.75" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PlayingFieldBackgroundWithOpacity" StartPoint="0,0" EndPoint="1,1" Opacity="0.95">
            <GradientStop Color="#031A3E" Offset="0.0" />
            <GradientStop Color="#042962" Offset="0.5" />
            <GradientStop Color="#040E62" Offset="0.75" />

        </LinearGradientBrush>
        <LinearGradientBrush x:Key="JeopardyLogoBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#D0BE05" Offset="0.0" />
            <GradientStop Color="#F7E201" Offset="0.5" />
            <GradientStop Color="#C6B500" Offset="0.75" />
        </LinearGradientBrush>

        <!-- Foreground colors-->
        <Color x:Key="PrimaryColorRaw" A="255" R="55" G="90" B="127" />
        <Color x:Key="PrimaryColorDisabledRaw" A="166" R="55" G="90" B="127" />
        <Color x:Key="MainTextColorRaw" A="255" R="255" G="255" B="255" />
        <Color x:Key="MainSuccessColorRaw" A="255" R="31" G="223" B="41" />
        <Color x:Key="MainErrorColorRaw" A="255" R="231" G="76" B="60" />
        <Color x:Key="MainInfoColorRaw" A="255" R="52" G="152" B="219" />
        <Color x:Key="MainHighlightColorRaw" A="255" R="185" G="204" B="152" />
        <Color x:Key="MainMouseOverColorRaw" A="255" R="71" G="136" B="200" />

        <SolidColorBrush x:Key="PrimaryColor" Color="{StaticResource PrimaryColorRaw}"/>
        <SolidColorBrush x:Key="PrimaryColorDisabled" Color="{StaticResource PrimaryColorRaw}" Opacity="0.65"/>
        <SolidColorBrush x:Key="PrimaryColorHover" Color="#2B4764" />

        <SolidColorBrush x:Key="MainButtonPressedBorder" Color="#557392" Opacity="0.5" />
        <SolidColorBrush x:Key="MainSuccessColor" Color="{StaticResource MainSuccessColorRaw}" />
        <SolidColorBrush x:Key="MainSuccessColorMuted" Color="{StaticResource MainSuccessColorRaw}" Opacity="0.65" />
        <SolidColorBrush x:Key="MainSuccessColorDisabled" Color="{StaticResource MainSuccessColorRaw}" Opacity="0.45" />
        <SolidColorBrush x:Key="MainInfoColor" Color="{StaticResource MainInfoColorRaw}" />
        <SolidColorBrush x:Key="MainWarningColor" Color="#F39C12" />
        <SolidColorBrush x:Key="MainErrorColor" Color="{StaticResource MainErrorColorRaw}" />
        <SolidColorBrush x:Key="MainErrorColorMuted" Color="{StaticResource MainErrorColorRaw}" Opacity="0.65"/>
        <SolidColorBrush x:Key="MainErrorColorDisabled" Color="{StaticResource MainErrorColorRaw}" Opacity="0.45"/>
        
        <SolidColorBrush x:Key="MainTextColor" Color="{StaticResource MainTextColorRaw}" />
        <SolidColorBrush x:Key="MainTextDisabledColor" Color="{StaticResource MainTextColorRaw}" Opacity="0.65"/>
        <SolidColorBrush x:Key="MainTextColorTransparent" Color="{StaticResource MainTextColorRaw}" Opacity="0.7"/>
        <SolidColorBrush x:Key="MainTextMutedColor" Color="#888888" />
        <SolidColorBrush x:Key="MainHighlightColor" Color="{StaticResource MainHighlightColorRaw}" />
        <SolidColorBrush x:Key="MainMouseOverColor" Color="{StaticResource MainMouseOverColorRaw}" />

        <!-- TextBlocks-->
        <Style x:Key="TextBlockStyleBase" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource Lato}" />
        </Style>
        <Style x:Key="MainTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyleBase}">
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"/>
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Opacity" Value="0.9" />
        </Style>
        <Style x:Key="SymbolButtonStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"/>
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="RenderOptions.ClearTypeHint" Value="Auto" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"  />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <!-- Buttons -->
        <Style x:Key="EmptyButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrimaryStyleBase" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource Lato}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>
        <Style x:Key="ButtonPrimaryStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                                CornerRadius="3"
                                BorderThickness="3"
                                BorderBrush="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                                Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainTextMutedColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource BackgroundColorDarkerShade}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource BackgroundColorDarkerShade}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainHighlightColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainButtonPressedBorder}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainButtonPressedBorder}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteButtonEditBoxWindow" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                        CornerRadius="3"
                        BorderThickness="3"
                        BorderBrush="{StaticResource MainErrorColorMuted}"
                        Background="{StaticResource MainErrorColorMuted}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColorDisabled}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColorDisabled}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColorMuted}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColorMuted}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CorrectButtonEditBoxWindow" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                                CornerRadius="3"
                                BorderThickness="3"
                                BorderBrush="{StaticResource MainSuccessColorMuted}"
                                Background="{StaticResource MainSuccessColorMuted}">
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColorDisabled}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColorDisabled}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColorMuted}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColorMuted}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AcceptingAnswersToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="{StaticResource Lato}" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="layoutRoot"
                                CornerRadius="3"
                                BorderThickness="3"
                                BorderBrush="{StaticResource MainErrorColorMuted}"
                                Background="{StaticResource MainErrorColorMuted}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColorMuted}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColorMuted}" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColor}" />
                                    <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColor}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColor}" />
                                    <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColor}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- TextBox -->
        <Style x:Key="MainTextBoxStyleBase" TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource Lato}" />
        </Style>

        <!-- Combo box -->
        <!-- Normal ComboBox -->
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="{StaticResource MainBackgroundRaw}" />
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#ABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Background"  Color="{StaticResource PrimaryColorDisabledRaw}" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Black" Opacity="0.3"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" 
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                BorderThickness="1" Background="Black">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Background="Transparent" 
                                      Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>

                <Popup x:Name="PART_Popup" 
                       AllowsTransparency="true" 
                       Grid.ColumnSpan="2" 
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                       Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" 
                                                   Color="Transparent" 
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" 
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                BorderThickness="1" 
                                Background="Transparent">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" 
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Background="{TemplateBinding Background}" 
                              Grid.ColumnSpan="2" 
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                              Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" 
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                             Margin="{TemplateBinding Padding}" 
                             Style="{StaticResource ComboBoxEditableTextBox}" 
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Lato" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
