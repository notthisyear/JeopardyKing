<UserControl x:Class="JeopardyKing.WpfComponents.EditQuestionBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
             xmlns:game="clr-namespace:JeopardyKing.GameComponents"
             xmlns:components="clr-namespace:JeopardyKing.WpfComponents"
             xmlns:converters="clr-namespace:JeopardyKing.WpfComponents.Converters"
             xmlns:validation="clr-namespace:JeopardyKing.WpfComponents.ValidationRules"
             xmlns:vlc="clr-namespace:LibVLCSharp.WPF;assembly=LibVLCSharp.WPF"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Border x:Name="editQuestionBox"
            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=.}"
            Background="{StaticResource BackgroundColorDarkerShade}"
            Opacity="{Binding Path=EditQuestionOpacityValue}"
            Width="420"
            Height="750"
            Margin="10" 
            CornerRadius="5">
        <Border.RenderTransform>
            <TranslateTransform X="{Binding Path=EditQuestionBoxXValue}" />
        </Border.RenderTransform>

        <Grid>
            <Grid.Resources>
                <ObjectDataProvider x:Key="questionTypeSource"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type sys:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="game:QuestionType"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <Storyboard x:Key="animateOpacityToZero"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateOpacityToPointFive"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateOpacityToZeroPointNine"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0.9" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateOpacityToOne"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0.9" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateScaleUp"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                     From="2"
                                     To="2.5">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                     From="2"
                                     To="2.5">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
                <Storyboard x:Key="animateScaleDown"
                            PresentationOptions:Freeze="True">
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                     From="2.5"
                                     To="2">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                     From="2.5"
                                     To="2">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
                <RowDefinition Height="60" />
                <RowDefinition Height="20" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="75" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Top row -->
            <StackPanel x:Name="topRowStackPanel"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Orientation="Vertical"
                        HorizontalAlignment="Center"
                        Margin="0,20,0,10">
                
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                        Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.CategoryName}"
                        HorizontalAlignment="Center"
                        FontSize="12"/>

                <Grid x:Name="valueDisplay"
                      HorizontalAlignment="Center">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ValueIsBeingEdited}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <TextBlock FontSize="54"
                               HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=valueDisplay, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource MainTextDisabledColor}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource valueDisplayConverter}">
                                <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.Value" />
                                <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.Currency" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <Button Width="{Binding ElementName=valueDisplay, Path=ActualWidth}"
                            Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                            Click="EditValueButtonClicked">
                        <Button.Content>
                            <TextBlock Text="&#xE70F;"
                                       HorizontalAlignment="Center"
                                       ToolTip="Click to edit question value">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SymbolButtonStyle}">
                                        <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                        <Setter Property="FontSize" Value="40" />
                                        <Setter Property="FontWeight" Value="Regular" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource MainMouseOverColor}" />
                                                <Setter Property="FontSize" Value="44" />
                                                <Setter Property="FontWeight" Value="ExtraBold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource EmptyButton}">
                                <Setter Property="Opacity" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=valueDisplay, Path=IsMouseOver}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToZeroPointNine}" />
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                
                <!-- Edit value box-->
                <StackPanel Orientation="Vertical">
                    <TextBox x:Name="editValueBox"
                            Margin="20,10,20,10"
                            VerticalContentAlignment="Center"
                            PreviewKeyDown="KeyPressedEditBox"
                             FontSize="54"
                             Width="200">
                        <TextBox.Text>
                            <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.Value"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:QuestionValueValidationRule Min="0.0"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyleBase}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="ToolTip" Value="Enter new question value" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ValueIsBeingEdited}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
            </StackPanel>

            <Separator Grid.Row="1"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Margin="10,0,10,0"/>
           
            <!-- Question type box -->
            <StackPanel Orientation="Vertical"
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,10,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top">

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            Margin="20,0,0,0">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               Text="Question type:"
                               FontStyle="Italic"
                               Margin="0,3,10,0"/>

                    <ComboBox Style="{StaticResource ComboBoxStyle}"
                              MinWidth="60"
                              ItemsSource="{Binding Source={StaticResource questionTypeSource}}"
                              SelectedItem="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="Select question type"/>
                </StackPanel>

                <!-- Media flow type -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            Margin="20,10,0,0">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Text}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               Text="Media flow type:"
                               FontStyle="Italic"
                               Margin="0,3,10,0"/>

                    <ComboBox Style="{StaticResource ComboBoxStyle}"
                              MinWidth="190"
                             ItemsSource="{Binding Path=ViewModel.MediaFlowTypes}"
                             SelectedItem="{Binding Path=ViewModel.SelectedMediaFlow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Choose media flow type" />
                </StackPanel>
            </StackPanel>

            <!-- Bonus and gamble check mark -->
            <StackPanel Orientation="Vertical"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="5,10,15,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,8">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                            Text="Bonus question:"
                            FontStyle="Italic"
                            Margin="0,2,10,0"/>

                    <CheckBox IsChecked="{Binding ViewModel.ModeManager.CurrentlySelectedQuestion.IsBonus, Mode=TwoWay}"
                            ToolTip="Check to make this question be a bonus question. A bonus question is worth twice its advertised value."/>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                                Margin="0,10,0,0"
                            HorizontalAlignment="Right">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                Text="Gamble question:"
                                FontStyle="Italic"
                                Margin="0,2,10,0"/>

                    <CheckBox IsChecked="{Binding ViewModel.ModeManager.CurrentlySelectedQuestion.IsGamble, Mode=TwoWay}"
                                ToolTip="Check to make this question be a gamble question. A gamble question lets the players bet their current amount on the question."/>
                </StackPanel>
            </StackPanel>

            <Separator Grid.Row="3"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Margin="10,0,10,0"/>

            <!-- Text type question -->
            <Grid Margin="10"
                    Grid.Row="4"
                    Grid.Column="0"
                    Grid.ColumnSpan="2">

                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Text}">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <TextBlock Grid.Row="0"
                            Style="{StaticResource MainTextBlockStyle}"
                            Text="Question"
                            Margin="0,0,0,5" />

                <TextBox x:Name="textContentInputBox"
                         Grid.Row="1"
                         Padding="10,0,10,0"
                         Style="{StaticResource MainTextBoxStyleBase}"
                         Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="16"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         MinLines="18"
                         MaxLines="18"
                         ToolTip="Write question here"
                         VerticalContentAlignment="Top"/>

                <TextBlock Grid.Row="1"
                            Text="Write question here"
                            FontSize="20"
                            FontStyle="Italic"
                            Foreground="{StaticResource BackgroundColorDarkerShade}"
                           Opacity="0.5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=textContentInputBox, Path=Text.Length}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <!-- Multimedia type question -->
            <Grid Margin="10"
                Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="2">

                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="45" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="80" />
                </Grid.RowDefinitions>
  
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Text}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <TextBlock Grid.Row="0"
                            Style="{StaticResource MainTextBlockStyle}"
                            Text="Question text (optional)"
                            Margin="0,0,0,5"/>

                <!-- Multimedia question text -->
                <TextBox Grid.Row="1"
                        Style="{StaticResource MainTextBoxStyleBase}"
                        Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Stretch"
                        FontSize="16"
                        TextWrapping="Wrap"
                        MinLines="2"
                        MaxLines="2"
                        ToolTip="Write question here. For multimedia questions, text is optional."/>

                <TextBlock Grid.Row="2"
                            Style="{StaticResource MainTextBlockStyle}"
                            Text="Preview"
                            Margin="0,5,0,0"/>
                
                <!-- Multimedia preview -->
                <Border x:Name="multimediaPreviewBox"
                        Grid.Row="3"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="3">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Text}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid>
                        <TextBlock Text="Select media to show preview"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Opacity="0.7"
                                   FontStyle="Italic">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MultimediaContentLink}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!-- Image -->
                        <Image Height="{Binding ElementName=multimediaPreviewBox, Path=ActualHeight}">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Source" Value="{StaticResource emptyImage}" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                                <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Image}" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="Source">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource bitmapCreatorConverter}">
                                                            <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion" />
                                                            <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.MultimediaContentLink" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <!-- Audio and video -->
                        <vlc:VideoView x:Name="audioVideoPlayer">
                            <Grid Background="#01000000"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"
                                  MouseEnter="EnclosingAudioVideoMouseEnter"
                                  MouseLeave="EnclosingAudioVideoMouseLeave">

                                <Grid.Resources>
                                    <Style x:Key="audioButtonPanelStyle" TargetType="{x:Type StackPanel}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Audio}" />
                                                    <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Video}" />
                                                    <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>

                                <Button Style="{StaticResource EmptyButton}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Click="PlayOrPauseButtonClicked"
                                        Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}}">
                                    <Button.Content>
                                        <components:IconBox x:Name="playPauseIcon"
                                                            StrokeThickness="0"
                                                            FillColor="White">
                                            <components:IconBox.Style>
                                                <Style TargetType="{x:Type components:IconBox}">
                                                    <Setter Property="Opacity" Value="0.0" />
                                                    <Setter Property="ToolTip" Value="Click to play" />
                                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="2" ScaleY="2" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <EventTrigger.Actions>
                                                                <BeginStoryboard Storyboard="{StaticResource animateScaleUp}" />
                                                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                                                            </EventTrigger.Actions>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <EventTrigger.Actions>
                                                                <BeginStoryboard Storyboard="{StaticResource animateScaleDown}" />
                                                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToPointFive}" />
                                                            </EventTrigger.Actions>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </components:IconBox.Style>
                                        </components:IconBox>
                                    </Button.Content>
                                </Button>

                                <StackPanel Style="{StaticResource audioButtonPanelStyle}"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Margin="10,10,0,0"
                                            ToolTip="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MultimediaContentLink}">
                                    <components:IconBox IconType="Audio"
                                                        ScaleFactor="1"
                                                        StrokeThickness="0" />
                                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                               Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MediaName}"
                                               FontStyle="Italic"
                                               FontSize="14"
                                               Margin="10,8,0,0"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource audioButtonPanelStyle}"
                                            Orientation="Horizontal"
                                            VerticalAlignment="Bottom"
                                            Margin="10">
                                    <StackPanel Orientation="Vertical"
                                                Background="#01000000">
                                        <components:TwoPartTimeSlider Width="260"
                                                                  Minimum="0"
                                                                  Maximum="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.VideoOrAudioLengthSeconds}"
                                                                  LowerValue="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.StartVideoOrAudioAtSeconds}"
                                                                  UpperValue="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.EndVideoOrAudioAtSeconds}"
                                                                  Margin="0,0,0,5">
                                            <components:TwoPartTimeSlider.Style>
                                                <Style TargetType="{x:Type components:TwoPartTimeSlider}">
                                                    <Setter Property="Opacity" Value="0" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=IsMouseOver}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </components:TwoPartTimeSlider.Style>
                                        </components:TwoPartTimeSlider>
                                        <components:ProgressSliderWithMarkedArea x:Name="progressSlider"
                                                                                 Width="260"
                                                                                 Height="15"
                                                                                 MainBackgroundColor="{StaticResource PrimaryColorDisabled}"
                                                                                 MarkedAreaColor="{StaticResource PrimaryColor}"
                                                                                 Minimum="0"
                                                                                 Maximum="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.VideoOrAudioLengthSeconds}"
                                                                                 AreaStart="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.StartVideoOrAudioAtSeconds}"
                                                                                 AreaEnd="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.EndVideoOrAudioAtSeconds}" 
                                                                                 ProgressMarkerDragDone="ProgressSliderDragDone"
                                                                                 ProgressMarkerValue="{Binding Path=ProgressBarMarkerPosition}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                VerticalAlignment="Bottom"
                                                Margin="10,0,0,0">
                                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                               Text="{Binding Path=ProgressBarMarkerPosition, Converter={StaticResource secondsToTimeStringConverter}}"/>
                                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                               Text="/"
                                               Margin="4,0,4,0" />
                                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                               Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.VideoOrAudioLengthSeconds, Converter={StaticResource secondsToTimeStringConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </vlc:VideoView>

                        <!-- Youtube video -->
                        <wpf:ChromiumWebBrowser>
                            <wpf:ChromiumWebBrowser.Style>
                                <Style TargetType="{x:Type wpf:ChromiumWebBrowser}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Address" Value="" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}" />
                                                <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="Address" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MultimediaContentLink}" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </wpf:ChromiumWebBrowser.Style>
                        </wpf:ChromiumWebBrowser>
                    </Grid>
                </Border>

                <!-- Multimedia action buttons -->
                <Grid Grid.Row="4"
                      Margin="0,10,0,0">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="160" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                <Setter Property="Text" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type, StringFormat={}{0} source:}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}">
                                        <Setter Property="Text" Value="Youtube link:" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="0"
                               Grid.Column="1"
                               VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                <Setter Property="FontStyle" Value="Italic" />
                                <Setter Property="Text" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MediaName, Converter={StaticResource stringShortenerConverter}, ConverterParameter=36}" />
                                <Setter Property="ToolTip" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.MultimediaContentLink}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}">
                                        <Setter Property="Text" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.YoutubeVideoId}" />
                                        <Setter Property="ToolTip" Value="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.OriginalYoutubeUrl}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Button Grid.Row="0"
                            Grid.Column="2"
                            Width="110"
                            HorizontalAlignment="Right">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="Content" Value="Choose media..." />
                                <Setter Property="ToolTip" Value="Click to select media on disk" />
                                <Setter Property="Command" Value="{Binding Path=ViewModel.LoadMediaCommand}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}">
                                        <Setter Property="Content" Value="Add YouTube link..." />
                                        <Setter Property="ToolTip" Value="Click to add YouTube link" />
                                        <Setter Property="Command" Value="{Binding Path=ViewModel.GetYoutubeLinkCommand}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!-- Audio and video range -->
                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Text" Value="Clip details:" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}">
                                        <Setter Property="Text" Value="Start video at:" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Image}">
                                        <Setter Property="Text" Value="Image info:" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <StackPanel Grid.Row="1"
                                Grid.Column="1"
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Audio}" />
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Video}" />
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                    FontWeight="Bold"
                                    Margin="0,0,5,0">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource clipLengthToTimeConverter}">
                                    <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.StartVideoOrAudioAtSeconds" />
                                    <Binding Path="ViewModel.ModeManager.CurrentlySelectedQuestion.EndVideoOrAudioAtSeconds" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                Text="(from"
                                FontStyle="Italic"
                                Margin="0,0,5,0" />
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                   Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.StartVideoOrAudioAtSeconds, Converter={StaticResource secondsToTimeStringConverter}}"
                                   FontStyle="Italic" />
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                    Text="to"
                                    FontStyle="Italic"
                                    Margin="5,0,5,0"/>
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                   Text="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.EndVideoOrAudioAtSeconds, Converter={StaticResource secondsToTimeStringConverter}}"
                                   FontStyle="Italic"/>
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                   Text=")"
                                   FontStyle="Italic" />
                    </StackPanel>

                    <!-- Youtube video start at options -->
                    <StackPanel Grid.Row="1"
                                Grid.Column="1"
                                Orientation="Horizontal"
                                VerticalAlignment="Top">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}" />
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBox x:Name="youtubeVideoMinutes"
                                Width="25"
                                 Margin="0,5,0,0"
                                VerticalContentAlignment="Bottom">
                            <TextBox.Text>
                                <Binding Path="ViewModel.StartVideoAtMinutes"
                                            Mode="TwoWay"
                                            UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:IntegerRangeValidationRule MinInclusive="0"
                                                                               MaxInclusive="1000" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyleBase}">
                                    <Setter Property="ToolTip" Value="Minutes" />
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="true">
                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                    Text=":"
                                    FontStyle="Italic"
                                    Margin="5,10,5,0"/>

                        <TextBox  x:Name="youtubeVideoSeconds"
                                Width="25"
                                Margin="0,5,0,0"
                                VerticalContentAlignment="Bottom">
                            <TextBox.Text>
                                <Binding Path="ViewModel.StartVideoAtSeconds"
                                                    Mode="TwoWay"
                                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:IntegerRangeValidationRule MinInclusive="0"
                                                                               MaxInclusive="59" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyleBase}">
                                    <Setter Property="ToolTip" Value="Seconds" />
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="true">
                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>

                    <!-- Set audio/video cursor to start at range -->
                    <Button Grid.Row="1"
                            Grid.Column="2"
                            Width="110"
                            HorizontalAlignment="Right"
                            Click="AudioVideoSetCursorButtonClicked">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Content" Value="Set at range start" />
                                <Setter Property="ToolTip" Value="Click to set the cursor at the start of the range" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Image}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!-- Update Youtube link with time options -->
                    <Button Grid.Row="1"
                            Grid.Column="2"
                            Width="110"
                            HorizontalAlignment="Right">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Content" Value="Refresh preview" />
                                <Setter Property="ToolTip" Value="Cannot refresh preview - start time is invalid" />
                                <Setter Property="Command" Value="{Binding Path=ViewModel.RefreshYoutubeVideoLink}" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.YoutubeVideo}" />
                                            <Condition Binding="{Binding Path=ViewModel.ModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=youtubeVideoMinutes, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=youtubeVideoSeconds, Path=(Validation.HasError)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Setter Property="ToolTip" Value="Click to refresh the video preview with the current start at settings" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid> 

            <Separator Grid.Row="5"
                           Grid.Column="0"
                           Grid.ColumnSpan="2"
                           Margin="10,0,10,0" />

            <!-- Delete button -->
            <StackPanel Orientation="Horizontal"
                        Grid.Row="6"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">

                <Button Style="{StaticResource DeleteButtonEditBoxWindow}"
                        HorizontalAlignment="Center"
                        Content="Delete question"
                        ToolTip="Click to delete question"
                        Command="{Binding Path=ViewModel.DeleteQuestionCommand}"/>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
