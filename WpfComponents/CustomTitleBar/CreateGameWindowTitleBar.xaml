<UserControl x:Class="JeopardyKing.WpfComponents.CreateGameWindowTitleBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <Border DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=.}">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Background" Value="{StaticResource BackgroundColorDarkerShade}"/>
                <Setter Property="Height" Value="32" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                        <Setter Property="Margin" Value="6" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        
        <Grid x:Name="mainGrid">
            <Grid.Resources>
                <Style x:Key="layoutGridStyle" TargetType="{x:Type Grid}">
                    <Setter Property="Width" Value="46" />
                    <Setter Property="Height" Value="30"/>
                </Style>
                <Style x:Key="titleBarTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Opacity" Value="1"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Storyboard x:Key="animateBackgroundOpacityToOne"
                                PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="chromeLayoutRootBackgroundBrush"
                                                        Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateBackgroundOpacityToPointTwo"
                                PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="chromeLayoutRootBackgroundBrush"
                                                        Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0.2" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="animateBackgroundOpacityToZero"
                                PresentationOptions:Freeze="True">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="chromeLayoutRootBackgroundBrush"
                                                        Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <ControlTemplate x:Key="titleBarWindowButtonTemplate" TargetType="{x:Type Button}">
                    <Grid   x:Name="layoutRoot" 
                            Style="{StaticResource layoutGridStyle}">
                        <Grid.Background>
                            <SolidColorBrush x:Name="chromeLayoutRootBackgroundBrush"
                                                 Color="White" 
                                                 Opacity="0" />
                        </Grid.Background>
                        <TextBlock x:Name="buttonSymbol"
                                       Text="{TemplateBinding Content}"
                                       Style="{StaticResource SymbolButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonSymbol" Property="Opacity" Value="0.9"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToPointTwo}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToZero}"/>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainInfoColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <ControlTemplate x:Key="titleBarCloseButtonTemplate" TargetType="{x:Type Button}">
                    <Grid x:Name="layoutRoot" 
                              Style="{StaticResource layoutGridStyle}">
                        <Grid.Background>
                            <SolidColorBrush x:Name="chromeLayoutRootBackgroundBrush"
                                                 Color="{StaticResource MainErrorColorRaw}" 
                                                 Opacity="0" />
                        </Grid.Background>

                        <TextBlock x:Name="buttonSymbol"
                                    Text="{TemplateBinding Content}"
                                    Style="{StaticResource SymbolButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonSymbol" Property="Opacity" Value="0.9"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToOne}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToZero}"/>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColorDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <ControlTemplate x:Key="titleBarMenuButtonTemplate" TargetType="{x:Type Button}">
                    <Grid x:Name="layoutRoot" 
                           Style="{StaticResource layoutGridStyle}">
                        <Grid.Background>
                            <SolidColorBrush x:Name="chromeLayoutRootBackgroundBrush"
                                             Color="White" 
                                             Opacity="0" />
                        </Grid.Background>
                        
                        <TextBlock x:Name="buttonSymbol"
                                    Text="{TemplateBinding Content}"
                                    Style="{StaticResource MainTextBlockStyle}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonSymbol" Property="Opacity" Value="0.9"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToPointTwo}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToZero}"/>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainInfoColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <ControlTemplate x:Key="titleBarMenuItemsButtonTemplate" TargetType="{x:Type Button}">
                    <Grid x:Name="layoutRoot"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch">
                        <Grid.Background>
                            <SolidColorBrush x:Name="chromeLayoutRootBackgroundBrush"
                                             Color="White" 
                                             Opacity="0" />
                        </Grid.Background>

                        <TextBlock x:Name="buttonContent"
                                    Text="{TemplateBinding Content}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="5,5,0,5">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                    <Setter Property="FontWeight" Value="Regular" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonContent" Property="FontWeight" Value="Bold" />
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToPointTwo}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource animateBackgroundOpacityToZero}"/>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainInfoColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
                <Style x:Key="titleBarFunctionButtonBaseStyle" TargetType="{x:Type Button}">
                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>

                <Style x:Key="titleBarFunctionButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonBaseStyle}">
                    <Setter Property="Template" Value="{StaticResource titleBarWindowButtonTemplate}" />
                </Style>
                <Style x:Key="closeWindowFunctionButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonBaseStyle}">
                    <Setter Property="Template" Value="{StaticResource titleBarCloseButtonTemplate}" />
                </Style>

                <Style x:Key="menuItemButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonBaseStyle}">
                    <Setter Property="Template" Value="{StaticResource titleBarMenuButtonTemplate}" />
                </Style>
                
                <Style x:Key="minimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonStyle}">
                    <Setter Property="Content" Value="&#xE921;"/>
                    <Setter Property="ToolTip" Value="Minimize" />
                </Style>
                <Style x:Key="maximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonStyle}">
                    <Setter Property="Content" Value="&#xE922;"/>
                    <Setter Property="ToolTip" Value="Maximize" />
                </Style>
                <Style x:Key="restoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource titleBarFunctionButtonStyle}">
                    <Setter Property="Content" Value="&#xE923;"/>
                    <Setter Property="ToolTip" Value="Restore Down" />
                </Style>
                <Style x:Key="closeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource closeWindowFunctionButtonStyle}">
                    <Setter Property="Content" Value="&#xE8BB;"/>
                    <Setter Property="ToolTip" Value="Close" />
                </Style>

                <Style x:Key="contentMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource EmptyButton}">
                    <Setter Property="Template" Value="{StaticResource titleBarMenuItemsButtonTemplate}" />
                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                </Style>
                
                <ControlTemplate x:Key="contextMenuFile" TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="Black"
                            BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.8" />
                        </Border.Background>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="10" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Grid.Column="0" 
                                       Style="{StaticResource  SymbolButtonStyle}"
                                       Text="&#xE74E;"
                                       FontSize="14"
                                       Opacity="0.8"/>
                            <Button Grid.Column="1"
                                    Grid.Row="0"
                                    Content="Save"
                                    ToolTip="Click to save game (Ctrl+S)"
                                    Click="SaveMenuItemPressed"
                                    Style="{StaticResource contentMenuButtonStyle}" />

                            <TextBlock Grid.Row="1"
                                       Grid.Column="0" 
                                       Style="{StaticResource SymbolButtonStyle}"
                                       Text="&#xE792;"
                                       FontSize="14"
                                       Opacity="0.8"/>

                            <Button Grid.Column="1"
                                    Grid.Row="1"
                                     Content="Save As"
                                     ToolTip="Click to save game as"
                                     Click="SaveMenuItemPressed"
                                     Style="{StaticResource contentMenuButtonStyle}" />

                            <TextBlock Grid.Row="2"
                                       Grid.Column="0" 
                                       Style="{StaticResource SymbolButtonStyle}"
                                       Text="&#xE8E5;"
                                       FontSize="14"
                                       Opacity="0.8"/>
                            <Button Grid.Row="2"
                                    Grid.Column="2"
                                    Content="Open"
                                    ToolTip="Click to open existing game (Ctrl+L)"
                                    Click="OpenMenuItemPressed"
                                    Style="{StaticResource contentMenuButtonStyle}" />

                            <Separator Grid.Row="3"
                                       Grid.Column="1" />
                            
                            <Button Grid.Column="1"
                                    Grid.Row="4"
                                    Content="Exit"
                                    ToolTip="Click to exit"
                                    Click="ExitMenuItemPressed"
                                    Style="{StaticResource contentMenuButtonStyle}" />

                        </Grid>
                    </Border>
                </ControlTemplate>

                <ControlTemplate x:Key="contextMenuEdit" TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="Black"
                            BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.8" />
                        </Border.Background>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Grid.Column="0" 
                                       Style="{StaticResource SymbolButtonStyle}"
                                       Text="&#xE710;"
                                       FontSize="10"
                                       Opacity="0.8"/>

                            <Button Grid.Column="1"
                                    Grid.Row="0"
                                    Content="Add category"
                                    ToolTip="Click to add category"
                                    Click="AddCategoryMenuItemPressed"
                                    Style="{StaticResource contentMenuButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
                
                <ContextMenu x:Key="fileMenu"
                             Template="{StaticResource contextMenuFile}" />
                <ContextMenu x:Key="editMenu"
                            Template="{StaticResource contextMenuEdit}" />
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Orientation="Horizontal">
                <Button Content="File" 
                        Click="FileMenuItemPressed"
                        Style="{StaticResource menuItemButtonStyle}"/>
                <Button Content="Edit" 
                        Click="EditMenuItemPressed"
                        Style="{StaticResource menuItemButtonStyle}"/>
            </StackPanel>
            
            <!-- Current window type -->
            <StackPanel Grid.Column="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <TextBlock  Text="{Binding Path=ApplicationDescription}"
                            Style="{StaticResource titleBarTextStyle}"
                            FontSize="12"
                            FontWeight="DemiBold"/>

                <TextBlock Style="{StaticResource titleBarTextStyle}"
                           FontSize="14"
                           Text="|"
                           Margin="20,0,20,0" />

                <TextBlock  FontSize="12"
                            FontWeight="DemiBold"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleBarTextStyle}">
                            <Setter Property="Text" Value="{Binding Path=Title}" />
                            <Setter Property="FontStyle" Value="Normal" />
                            <Setter Property="ToolTip" Value="" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Title}" Value="">
                                    <Setter Property="Text" Value="[UNTITLED GAME]" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=GameHasUnsavedChanges}" Value="True">
                                    <Setter Property="FontStyle" Value="Italic" />
                                    <Setter Property="ToolTip" Value="Game has unsaved changes" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock  HorizontalAlignment="Center"
                            FontSize="12"
                            FontWeight="DemiBold"
                            FontStyle="Italic"
                            Text="*">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleBarTextStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=GameHasUnsavedChanges}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            
            </StackPanel>
            
            <!-- Buttons -->
            <Grid Grid.Column="2"
                      HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Minimize button -->
                <Button Grid.Column="0"
		                Style="{StaticResource minimizeButtonStyle}" 
                        Click="MinimizeButtonPressed"
                        Visibility="{Binding Path=ShowMinimizeButton, Converter={StaticResource booleanToVisibleOrCollapsedConverter}}"/>

                <Grid Grid.Column="1"
                      Visibility="{Binding Path=ShowMaximizeButton, Converter={StaticResource booleanToVisibleOrCollapsedConverter}}">
                
                    <!-- Maximize button -->
                    <Button Name="maximizeButton"
                            Style="{StaticResource maximizeButtonStyle}"
		                    Click="MaximizeButtonPressed"/>
                
                    <!-- Restore button -->
                    <Button Name="restoreButton"
                            Style="{StaticResource restoreButtonStyle}"
		                    Click="RestoreButtonPressed" />
                </Grid>

                <!-- Close button -->
                <Button Grid.Column="2"
		            Style="{StaticResource closeButtonStyle}"
                    Click="CloseButtonPressed"/>
            </Grid>
        </Grid>
    </Border>
</UserControl>
