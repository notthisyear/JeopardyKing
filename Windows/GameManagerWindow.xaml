<Window x:Class="JeopardyKing.Windows.GameManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:components="clr-namespace:JeopardyKing.WpfComponents"
        xmlns:windows="clr-namespace:JeopardyKing.Windows"
        xmlns:viewmodels="clr-namespace:JeopardyKing.ViewModels"
        xmlns:game="clr-namespace:JeopardyKing.GameComponents"
        Title="JeopardyKing"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None" 
        Width="1600"
        Height="900"
        WindowStartupLocation="CenterScreen"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        KeyDown="WindowKeyDown"
        xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" 
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Viewbox Stretch="Uniform"
             StretchDirection="Both"
             DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=.}">

        <Border Background="{StaticResource MainBackgroundColor}"
                Opacity="0.95">

            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ActualHeight}">
 
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Title bar -->
                <components:CustomTitleBar x:Name="titleBar"
                                            Grid.Row="0" 
                                            Title="JeopardyKing"
                                            ApplicationDescription="{Binding Path=ViewModel.ProgramDescription}"
                                            CurrentWindowState="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}"
                                            ShowMaximizeButton="True"
                                            TitleBarButtonPressed="TitleBarButtonPressed"/>

                <!-- Load board button -->
                <Button Content="Load game..."
                        ToolTip="Click to load a game board"
                        Command="{Binding Path=ViewModel.LoadBoardCommand}"
                        Grid.Row="1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.GameBoard}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Main grid -->
                <Grid Grid.Row="1">
                    <Grid.Resources>

                        <Storyboard x:Key="animateOpacityToZero"
                                    PresentationOptions:Freeze="True">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="animateOpacityToOne"
                                    PresentationOptions:Freeze="True">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <sys:Boolean x:Key="true">True</sys:Boolean>
                        <sys:Boolean x:Key="false">False</sys:Boolean>
                    </Grid.Resources>

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.GameBoard}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="200" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="150" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Game title -->
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Text="{Binding Path=ViewModel.GameBoard.GameName, Converter={StaticResource toUpperOrLowerConverter}, ConverterParameter=upper}"
                               Style="{StaticResource MainTextBlockStyle}"
                               FontSize="18"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />

                    <!-- Game board -->
                    <ItemsControl Grid.Row="1"
                                  Grid.RowSpan="2"
                                  Grid.Column="0"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  VerticalContentAlignment="Stretch"
                                  ItemsSource="{Binding Path=ViewModel.GameBoard.Categories}">
                        <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <components:CategoryViewGameManager Category="{Binding Path=.}"
                                                                        ViewModel="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.ViewModel.CategoryViewModel}"
                                                                        Padding="5,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Control buttons -->
                    <Border Grid.Row="1"
                            Grid.Column="1"
                            Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                            CornerRadius="5"
                            Margin="0,0,5,0">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <!-- Play mode -->
                            <TextBlock Grid.Row="0"
                                       Grid.Column="0"
                                       Style="{StaticResource MainTextBlockStyle}"
                                       Text="Mode:"
                                       VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="0"
                                      Grid.Column="1"
                                      ItemsSource="{Binding Path=ViewModel.GameModeOptions}"
                                      SelectedItem="{Binding Path=ViewModel.GameAnswerMode, Mode=TwoWay}"
                                      ToolTip="{Binding Path=ViewModel.GameAnswerModeToolTip}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      MinWidth="100"
                                      ToolTipService.ShowOnDisabled="True">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="ToolTip" Value="Cannot change game mode while question is active" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>

                            <!-- Buttons -->
                            <StackPanel Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        Orientation="Vertical"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">

                                <!-- Allow answers -->
                                <ToggleButton IsChecked="{Binding Path=ViewModel.AnswersAllowed, Mode=TwoWay}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource AcceptingAnswersToggleButtonStyle}">
                                            <Setter Property="Content" Value="Answers blocked" />
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="ToolTip" Value="Click to allow answers [Shortcut: A]" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content" Value="Answers allowed" />
                                                    <Setter Property="ToolTip" Value="Click to block answers [Shortcut: A]" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerAnswering}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                    <Setter Property="ToolTip" Value="Cannot change while player is answering" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <Button>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DeleteButtonEditBoxWindow}">
                                            <Setter Property="Margin" Value="0,10,0,10" />
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="ToolTip" Value="Click to abandon this question" />
                                            <Setter Property="Content" Value="Abandon question" />
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Setter Property="Command" Value="{Binding Path=ViewModel.AbandonQuestionCommand}" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerAnswering}" Value="False" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerHasAnswered}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Flow control button -->
                                <Button>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="ToolTip" Value="Press to start game" />
                                            <Setter Property="Content" Value="Start game" />
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Setter Property="Command" Value="{Binding Path=ViewModel.StartGameCommand}" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.None}" />
                                                        <Condition Binding="{Binding Path=ViewModel.AllPlayersHasMapping}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.None}" />
                                                        <Condition Binding="{Binding Path=ViewModel.AllPlayersHasMapping}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="ToolTip" Value="Cannot start - not all player are assigned a key" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.GameStarting}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="ToolTip" Value="Press to reveal next category" />
                                                    <Setter Property="Content" Value="Reveal next category" />
                                                    <Setter Property="Command" Value="{Binding Path=ViewModel.RevealNextCategoryCommand}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.RevealCategories}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="ToolTip" Value="Press to reveal next category" />
                                                    <Setter Property="Content" Value="Reveal next category" />
                                                    <Setter Property="Command" Value="{Binding Path=ViewModel.RevealNextCategoryCommand}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentState}" Value="{x:Static windows:QuestionVisualState.QuestionSelected}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowBoard}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.IsAnswered}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Start question" />
                                                        <Setter Property="ToolTip" Value="Click to start the question" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Command" Value="{Binding Path=ViewModel.StartQuestionCommand}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentState}" Value="{x:Static windows:QuestionVisualState.QuestionSelected}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowBoard}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.IsAnswered}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Start question" />
                                                        <Setter Property="ToolTip" Value="Question already answered" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.MediaQuestionFlow}" Value="{x:Static game:MediaQuestionFlow.TextThenMedia}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowContent}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowMediaContent}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Show/play media" />
                                                        <Setter Property="ToolTip" Value="Click to show or play the question media" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Command" Value="{Binding Path=ViewModel.ProgressQuestionCommand}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.HasMediaLink}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.MediaQuestionFlow}" Value="{x:Static game:MediaQuestionFlow.MediaThenText}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowMediaContent}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowContent}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Show content" />
                                                        <Setter Property="ToolTip" Value="Click to show content" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Command" Value="{Binding Path=ViewModel.ProgressQuestionCommand}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Audio}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowMediaContent}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InMediaContentPlaying}" Value="False" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerAnswering}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Play media" />
                                                        <Setter Property="ToolTip" Value="Click to play the media again" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Command" Value="{Binding Path=ViewModel.PlayMediaAgainCommand}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Video}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowMediaContent}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InMediaContentPlaying}" Value="False" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerAnswering}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="Play media" />
                                                        <Setter Property="ToolTip" Value="Click to play the media again" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Command" Value="{Binding Path=ViewModel.PlayMediaAgainCommand}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Re-enable question -->
                                <Button>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="ToolTip" Value="Press to allow question to be answered again" />
                                            <Setter Property="Content" Value="Set to unanswered" />
                                            <Setter Property="Margin" Value="0,10,0,0" />
                                            <Setter Property="Command" Value="{Binding Path=ViewModel.SetQuestionToUnansweredCommand}" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentState}" Value="{x:Static windows:QuestionVisualState.QuestionSelected}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowBoard}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.IsAnswered}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Playback information text -->
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.WindowState}" Value="{x:Static viewmodels:PlayWindowState.ShowQuestion}" />
                                                        <Condition Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion.Type}" Value="{x:Static game:QuestionType.Audio}" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InShowMediaContent}" Value="True" />
                                                        <Condition Binding="{Binding Path=ViewModel.PlayWindowViewModel.InMediaContentPlaying}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <TextBlock Text="{Binding Path=ViewModel.PlayWindowViewModel.CurrentPlayingMediaPositionSeconds, Converter={StaticResource secondsToTimeStringConverter}}"
                                                Style="{StaticResource MainTextBlockStyle}" />
                                    <TextBlock Text=" / "
                                                Style="{StaticResource MainTextBlockStyle}" />
                                    <TextBlock Style="{StaticResource MainTextBlockStyle}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource clipLengthToTimeConverter}">
                                                <Binding Path="ViewModel.QuestionModeManager.CurrentlySelectedQuestion.StartVideoOrAudioAtSeconds" />
                                                <Binding Path="ViewModel.QuestionModeManager.CurrentlySelectedQuestion.EndVideoOrAudioAtSeconds" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>

                                <!-- Correct / incorrect buttons -->
                                <StackPanel Orientation="Horizontal"
                                            Margin="0,10,0,0">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ViewModel.PlayWindowViewModel.InPlayerAnswering}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Button Style="{StaticResource CorrectButtonEditBoxWindow}"
                                            Content="&#xE73E;"
                                            Width="50"
                                            FontSize="18"
                                            FontFamily="Segoe MDL2 Assets"
                                            Margin="0,0,20,0"
                                            ToolTip="Answer is correct"
                                            Command="{Binding Path=ViewModel.AnswerQuestionCommand}"
                                            CommandParameter="{StaticResource true}"/>
                                    <Button Style="{StaticResource DeleteButtonEditBoxWindow}"
                                            Content="&#xE711;"
                                            Width="50"
                                            FontSize="18"
                                            FontFamily="Segoe MDL2 Assets"
                                            ToolTip="Answer is incorrect"
                                            Command="{Binding Path=ViewModel.AnswerQuestionCommand}"
                                            CommandParameter="{StaticResource false}"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <!-- Question overview -->
                    <components:QuestionOverview  Grid.Row="2"
                                                  Grid.Column="1"
                                                  Margin="10,20,10,0"
                                                  SelectedQuestion="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion}"
                                                  VerticalAlignment="Top">
                        <components:QuestionOverview.Style>
                            <Style TargetType="{x:Type components:QuestionOverview}">
                                <Setter Property="Opacity" Value="1" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ViewModel.QuestionModeManager.CurrentlySelectedQuestion}" Value="{x:Null}">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </components:QuestionOverview.Style>
                    </components:QuestionOverview>

                    <!-- Player panel -->
                    <Border Grid.Row="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                            CornerRadius="5"
                            Margin="5">
                        <components:PlayerPanel />
                    </Border>
                </Grid>
            </Grid>
        </Border>
    </Viewbox>
</Window>
